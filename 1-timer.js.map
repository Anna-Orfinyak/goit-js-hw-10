{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst timerDisplay = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet intervalId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    if (selected <= new Date()) {\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selected;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n\n  intervalId = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(intervalId);\n      updateTimerDisplay(convertMs(0));\n      dateTimePicker.disabled = false;\n      return;\n    }\n\n    updateTimerDisplay(convertMs(timeLeft));\n  }, 1000);\n});\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  timerDisplay.days.textContent = addLeadingZero(days);\n  timerDisplay.hours.textContent = addLeadingZero(hours);\n  timerDisplay.minutes.textContent = addLeadingZero(minutes);\n  timerDisplay.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","dateTimePicker","timerDisplay","userSelectedDate","intervalId","options","selectedDates","selected","iziToast","flatpickr","timeLeft","updateTimerDisplay","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"+IAOA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAe,CACnB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAa,KAEjBJ,EAAS,SAAW,GAEpB,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDR,EAAS,SAAW,KAEpBG,EAAmBI,EACnBP,EAAS,SAAW,GAEvB,CACH,EAEAS,EAAUR,EAAgBI,CAAO,EAEjCL,EAAS,iBAAiB,QAAS,IAAM,CAClCG,IAELH,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BG,EAAa,YAAY,IAAM,CAE7B,MAAMM,EAAWP,EADL,IAAI,KAGhB,GAAIO,GAAY,EAAG,CACjB,cAAcN,CAAU,EACxBO,EAAmBC,EAAU,CAAC,CAAC,EAC/BX,EAAe,SAAW,GAC1B,MACD,CAEDU,EAAmBC,EAAUF,CAAQ,CAAC,CACvC,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAmB,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7Dd,EAAa,KAAK,YAAce,EAAeJ,CAAI,EACnDX,EAAa,MAAM,YAAce,EAAeH,CAAK,EACrDZ,EAAa,QAAQ,YAAce,EAAeF,CAAO,EACzDb,EAAa,QAAQ,YAAce,EAAeD,CAAO,CAC3D,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}